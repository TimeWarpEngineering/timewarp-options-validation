name: Build and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true                     # Disable the .NET logo in the console output
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience to skip caching NuGet packages and speed up the build
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_AUTH_TOKEN: ${{secrets.PUBLISH_TO_NUGET_ORG}}     # <-- This is the token for the GitHub account you want to use.

jobs:
  build:
    runs-on: windows-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
        shell: pwsh

#      - name: Setup .NET
#        uses: actions/setup-dotnet@v2
#        with:
#          dotnet-version: 8.0.x

      - name: Build
        run: |
          cd source/TimeWarp.OptionsValidation/
          dotnet build --configuration Debug
        shell: pwsh

      - name: Publish
        run: |
          cd source/TimeWarp.OptionsValidation/bin/Packages
          dotnet nuget push TimeWarp.OptionsValidation.*.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{secrets.PUBLISH_TO_NUGET_ORG}}
        shell: pwsh

      - run: echo "🍏 This job's status is ${{ job.status }}."
